.job_template: &job_tags
    tags: 
    - factorio

# The build stages 
stages:
- prepare
- build
- test
- deploy

# Global variables
variables:
    MOD_VER_CMD: "modver info.json"

# Make sure we have these variables set before each script
before_script:
- 'export MOD_VER=$($MOD_VER_CMD)'
- 'export MOD_NAME=${CI_PROJECT_NAME}_${MOD_VER}'
- 'export MOD_FILE=${MOD_NAME}.zip'


prepare_test_dirs:
    <<: *job_tags
    stage: prepare
    script: 
    - 'if [ -n $BUILD_ONLY ]; then'
    - 'echo "Clearing the mods folder for a clean test run"'
    - 'rm -f /var/factorio/factorio/mods/*'
    - 'fi'


# Make a test mod package and run tests on factorio headless 
build_mod_release:
    <<: *job_tags
    stage: build
    only: 
    - triggers

    script: 
    - echo "Create 'proxy' directory"
    - 'ln -s . $MOD_NAME'

    - echo "Creating mod package..."
    - 'zip -r $MOD_FILE $MOD_NAME/graphics $MOD_NAME/locale $MOD_NAME/prototypes $MOD_NAME/script-locale $MOD_NAME/scripts $MOD_NAME/data.lua $MOD_NAME/data-updates.lua $MOD_NAME/data-final-fixes.lua $MOD_NAME/control.lua $MOD_NAME/config.lua $MOD_NAME/info.json'
    - echo "Copying mod package to factorio mods location"
    - 'mv $MOD_FILE /var/factorio/factorio/mods_release'


# Make a test mod package and run tests on factorio headless 
build_mod_tests:
    <<: *job_tags
    stage: build

    script: 
    - echo "Create 'proxy' directory"
    - 'ln -s . $MOD_NAME'

    - echo "Applying patches..."
    - 'git checkout -- control.lua'
    - 'echo "require \"tests.module\"" >> control.lua'
    - 'echo "require \"tests.prototypes\"" >> control.lua'

    - echo "Creating mod package..."
    - 'zip -r $MOD_FILE $MOD_NAME/tests $MOD_NAME/graphics $MOD_NAME/locale $MOD_NAME/prototypes $MOD_NAME/script-locale $MOD_NAME/scripts $MOD_NAME/data.lua $MOD_NAME/data-updates.lua $MOD_NAME/data-final-fixes.lua $MOD_NAME/control.lua $MOD_NAME/config.lua $MOD_NAME/info.json'

    - echo "Copying mod package to factorio mods location"
    - 'mv $MOD_FILE /var/factorio/factorio/mods'


test_mod:
    <<: *job_tags
    stage: test
    except: 
    - triggers

    script:
    - '# Testing save creation...'
    - 'cd /var/factorio/factorio'
    - 'echo "Removing old factorio save..."'
    - 'rm -f saves/dytech-core.zip'
    - 'echo "Creating new factorio save..."'
    - './bin/x64/factorio --create saves/dytech-core.zip'

    - '# Running unit tests...'
    - 'echo "Running factorio..."'
    - './test-runner.moon'


# Make a release mod package
deploy_mod_cron: 
    <<: *job_tags
    stage: deploy
    when: on_success
    allow_failure: true
    only:
    - triggers

    script:
    - echo "Create 'proxy' directory"
    - 'ln -s . $MOD_NAME'

    - 'if [ -n $NIGHTLY_BUILD ]; then'
    - 'echo "Creating mod package..."'
    - 'exit 0'
    - 'fi'
    - 'exit -1'

    artifacts: 
        name: "${CI_PROJECT_NAME}_$($MOD_VER_CMD)"
        expire_in: '1 day'
        paths: 
        - '${CI_PROJECT_NAME}_$($MOD_VER_CMD)/info.json'
        - '${CI_PROJECT_NAME}_$($MOD_VER_CMD)/config.lua'
        - '${CI_PROJECT_NAME}_$($MOD_VER_CMD)/data.lua'
        - '${CI_PROJECT_NAME}_$($MOD_VER_CMD)/data-updates.lua'
        - '${CI_PROJECT_NAME}_$($MOD_VER_CMD)/data-final-fixes.lua'
        - '${CI_PROJECT_NAME}_$($MOD_VER_CMD)/scripts/'
        - '${CI_PROJECT_NAME}_$($MOD_VER_CMD)/script-locale/'
        - '${CI_PROJECT_NAME}_$($MOD_VER_CMD)/prototypes/'
        - '${CI_PROJECT_NAME}_$($MOD_VER_CMD)/graphics/'
        - '${CI_PROJECT_NAME}_$($MOD_VER_CMD)/locale/'


deploy_mod: 
    <<: *job_tags
    stage: deploy
    when: on_success
    except: 
    - triggers
    only: 
    - tags

    script:
    - echo "Create 'proxy' directory"
    - 'ln -s . $MOD_NAME'

    - 'echo "Creating mod package..."'

    artifacts: 
        name: "${CI_PROJECT_NAME}_$($MOD_VER_CMD)"
        expire_in: '3 mos'
        paths: 
        - '${CI_PROJECT_NAME}_$($MOD_VER_CMD)/info.json'
        - '${CI_PROJECT_NAME}_$($MOD_VER_CMD)/config.lua'
        - '${CI_PROJECT_NAME}_$($MOD_VER_CMD)/data.lua'
        - '${CI_PROJECT_NAME}_$($MOD_VER_CMD)/data-updates.lua'
        - '${CI_PROJECT_NAME}_$($MOD_VER_CMD)/data-final-fixes.lua'
        - '${CI_PROJECT_NAME}_$($MOD_VER_CMD)/scripts/'
        - '${CI_PROJECT_NAME}_$($MOD_VER_CMD)/script-locale/'
        - '${CI_PROJECT_NAME}_$($MOD_VER_CMD)/prototypes/'
        - '${CI_PROJECT_NAME}_$($MOD_VER_CMD)/graphics/'
        - '${CI_PROJECT_NAME}_$($MOD_VER_CMD)/locale/'
